name: 'build-test'
on:
  push:
    branches:
      - dev
    paths-ignore:
      - '**/*.md'  # ignore all files with the .md extension in any subdirectory
  pull_request:
    branches:
      - main
      - dev
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:
    inputs:
      input-required:
        required: true
        default: 'input-required value'
      input-optional:
        required: false
        default: ''
      input-choice:
        type: choice
        description: Who to greet
        options:
          - name1
          - name2
      input-boolean:
        type: boolean

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: |
          npm install

      - name: Run All
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run all

  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Action
        uses: ./
        id: inputs
        with:
          log-inputs: true
          inputs: |
            - name: 'input-required'
              default: 'input-required value'

            - name: 'input-optional'
              default: ''

            - name: 'input-choice'
              default: 'name1'

            - name: 'input-boolean'
              default: 'false'

      # For more information and sample asserts, please see https://github.com/Payadel/assert/
      - name: Test outputs
        uses: Payadel/assert@v1.0.1
        with:
          fail-fast: false
          verbose: true
          inputs: |
            - name: 'test input-required'
              type: Equals
              expected: 'input-required value'
              actual: '${{ steps.inputs.outputs.input-required }}'
            
            - name: 'test input-required'
              type: Equals
              expected: ''
              actual: '${{ steps.inputs.outputs.input-required }}'

            - name: 'test input-choice'
              type: Equals
              expected: 'name1'
              actual: '${{ steps.inputs.outputs.input-choice }}'

            - name: 'test input-boolean'
              type: False
              input: '${{ steps.inputs.outputs.input-boolean }}'
